Welcome to CS 106B/X Trailblazer!
This program searches for paths through graphs
representing maps, mazes, and rocky terrains.
It demonstrates several graph algorithms for
finding paths, such as depth-first search (DFS),
breadth-first search (BFS), Dijkstra's Algorithm,
and A* search. You can also generate random mazes
using Kruskal's algorithm.

Loading world from map-middleearth.txt ...
Preparing world model ...
World model completed.

Looking for a path from Hobbiton to Rauros.
Executing depth-first search algorithm ...
Algorithm complete.
Path length: 5
Path cost: 111
Locations visited: 5

Looking for a path from Hobbiton to Rauros.
Executing breadth-first search algorithm ...
Algorithm complete.
Path length: 5
Path cost: 111
Locations visited: 11

Looking for a path from Hobbiton to Rauros.
Executing Dijkstra's algorithm ...
Algorithm complete.
Path length: 6
Path cost: 95
Locations visited: 9

Looking for a path from Hobbiton to Rauros.
Executing A* algorithm ...
Algorithm complete.
Path length: 6
Path cost: 95
Locations visited: 9

Looking for a path from Hobbiton to Black Gate.
Executing depth-first search algorithm ...
Algorithm complete.
Path length: 9
Path cost: 266
Locations visited: 9

Looking for a path from Hobbiton to Black Gate.
Executing breadth-first search algorithm ...
Algorithm complete.
Path length: 6
Path cost: 131
Locations visited: 13

Looking for a path from Hobbiton to Black Gate.
Executing Dijkstra's algorithm ...
Algorithm complete.
Path length: 7
Path cost: 115
Locations visited: 12

Looking for a path from Hobbiton to Black Gate.
Executing A* algorithm ...
Algorithm complete.
Path length: 7
Path cost: 115
Locations visited: 12
